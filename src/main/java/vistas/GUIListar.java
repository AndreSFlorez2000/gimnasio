/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controlador.EquipoController;
import controlador.Observer;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author Rafa
 */
public class GUIListar extends javax.swing.JFrame implements Observer {
    private EquipoController equipoController;
    /**
     * Creates new form GUIListar
     */
    public GUIListar() {
       
        initComponents();
        equipoController = new EquipoController();
        ajustarTabla();
    }
    public GUIListar(EquipoController equipoController) {
        
       this.equipoController = equipoController; 
        initComponents(); 
        ajustarTabla(); 
        llenarTabla();
        equipoController.agregarObservador(this);
        System.out.println("La ventana GUIListar se ha registrado como Observer");
    }
    
    public void llenarTabla() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpiamos la tabla antes de llenarla

        List<EquipoGimnasio> listaEquipos = equipoController.listarEquipos();
        System.out.println("Equipos en la lista:");
        for (EquipoGimnasio equipo : listaEquipos) {
            System.out.println(equipo.getNombre() + " - " + equipo.getClass().getSimpleName());
        }

        for (EquipoGimnasio equipo : listaEquipos) {
            Object[] rowData = new Object[12]; // Columnas en la tabla

            rowData[0] = equipo.getNombre();
            rowData[1] = equipo.getMarca();
            rowData[2] = equipo.getEstado();

            if (equipo instanceof EquipoCardio) {
                EquipoCardio eqCardio = (EquipoCardio) equipo;
                rowData[3] = eqCardio.getVelocidadMaxima();
                rowData[4] = eqCardio.getNivelResistencia();
                rowData[5] = eqCardio.getTipoPantalla();
            } else {
                rowData[3] = rowData[4] = rowData[5] = null;
            }

            if (equipo instanceof EquipoFuerza) {
                EquipoFuerza eqFuerza = (EquipoFuerza) equipo;
                rowData[6] = eqFuerza.getTipoDeEjercicio();
                rowData[7] = eqFuerza.getPesoMaximo();
                rowData[8] = eqFuerza.getMaterial();
            } else {
                rowData[6] = rowData[7] = rowData[8] = null;
            }

            if (equipo instanceof RutinaFuerza) {
                RutinaFuerza rutina = (RutinaFuerza) equipo;
                rowData[9] = rutina.getNombreRutina();
                rowData[10] = rutina.getSeries();
                rowData[11] = rutina.getRepeticiones();
            } else {
                rowData[9] = rowData[10] = rowData[11] = null;
            }
            
            model.addRow(rowData);
        }
    }
    
    @Override
    public void actualizar() {
        llenarTabla(); // Aquí le dices que se actualice automáticamente
    }
    
    private void ajustarTabla() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpiar filas vacías
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setTitle("Listar");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Marca", "Estado", "Velocidad Maxima", "Nivel Resistencia", "Tipo Pantalla", "Tipo Ejercicio", "Peso Maximo", "Material", "Nombre Rutina", "Series", "Repeticiones"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Lista de los equipos actuales");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 1038, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonListar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonListar)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        // TODO add your handling code here:
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpia la tabla antes de listar

        List<EquipoGimnasio> listaEquipos = equipoController.listarEquipos();
        System.out.println("Total equipos en lista: " + listaEquipos.size());

        for (EquipoGimnasio equipo : listaEquipos) {
            System.out.println("Listando equipo: " + equipo.getNombre());
            model.addRow(new Object[]{
                equipo.getNombre(),
                equipo.getMarca(),
                equipo.getEstado()
            });
        }    
    }//GEN-LAST:event_jButtonListarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new GUIListar().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
